<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.htht.service.platform.portal.system.mapper.SystemConfigMapper">
    <resultMap type="cn.htht.service.platform.portal.entity.system.SystemConfig" id="SysConfigResult">
        <id property="id" column="id"/>
        <result property="configName" column="config_name"/>
        <result property="configKey" column="config_key"/>
        <result property="configValue" column="config_value"/>
        <result property="configType" column="config_type"/>
        <result property="defaultValue" column="default_value"/>
        <result property="valueRange" column="value_range"/>
        <result property="isInternal" column="is_internal"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="selectConfigVo">
        select id,
               config_name,
               config_key,
               config_value,
               config_type,
               default_value,
               value_range,
               is_internal,
               create_time,
               update_time,
               remark
        from system_config
    </sql>

    <!-- 查询条件 -->
    <sql id="sqlwhereSearch">
        <where>
            <if test="id !=null">
                and id = #{id}
            </if>
            <if test="configKey !=null and configKey != ''">
                and config_key = #{configKey}
            </if>
        </where>
    </sql>

    <select id="selectConfig" parameterType="cn.htht.service.platform.portal.entity.system.SystemConfig"
            resultMap="SysConfigResult">
        <include refid="selectConfigVo"/>
        <include refid="sqlwhereSearch"/>
    </select>

    <select id="selectConfigList" parameterType="cn.htht.service.platform.portal.entity.system.SystemConfig"
            resultMap="SysConfigResult">
        <include refid="selectConfigVo"/>
        <where>
            <if test="configName != null and configName != ''">
                AND config_name like concat(concat('%',#{configName}),'%')
            </if>
            <if test="configType != null and configType != ''">
                AND config_type = #{configType}
            </if>
            <if test="configKey != null and configKey != ''">
                AND config_key like concat(concat('%',#{configKey}),'%')
            </if>
            <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
                and create_time &gt;= #{params.beginTime}
            </if>
            <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
                and create_time &lt;= #{params.endTime}
            </if>
        </where>
    </select>

    <select id="checkConfigKeyUnique" parameterType="String" resultMap="SysConfigResult">
        <include refid="selectConfigVo"/>
        where config_key = #{configKey} limit 1
    </select>

    <insert id="insertConfig" parameterType="cn.htht.service.platform.portal.entity.system.SystemConfig">
        insert into system_config (
        <if test="id != null and id != '' ">id,</if>
        <if test="configName != null and configName != '' ">config_name,</if>
        <if test="configKey != null and configKey != '' ">config_key,</if>
        <if test="configValue != null and configValue != '' ">config_value,</if>
        <if test="configType != null and configType != '' ">config_type,</if>
        <if test="defaultValue != null and defaultValue != '' ">default_value,</if>
        <if test="valueRange != null and valueRange != '' ">value_range,</if>
        <if test="isInternal != null and isInternal != '' ">is_internal,</if>
        <if test="remark != null and remark != ''">remark,</if>
        create_time
        )values(
        <if test="id != null and id != '' ">#{id},</if>
        <if test="configName != null and configName != ''">#{configName},</if>
        <if test="configKey != null and configKey != ''">#{configKey},</if>
        <if test="configValue != null and configValue != ''">#{configValue},</if>
        <if test="configType != null and configType != ''">#{configType},</if>
        <if test="defaultValue != null and defaultValue != '' ">#{defaultValue},</if>
        <if test="valueRange != null and valueRange != '' ">#{valueRange},</if>
        <if test="isInternal != null and isInternal != '' ">#{isInternal},</if>
        <if test="remark != null and remark != ''">#{remark},</if>
        REPLACE(unix_timestamp(current_timestamp(3)),'.','')
        )
    </insert>

    <update id="updateConfig" parameterType="cn.htht.service.platform.portal.entity.system.SystemConfig">
        update system_config
        <set>
            <if test="configName != null and configName != ''">config_name = #{configName},</if>
            <if test="configKey != null and configKey != ''">config_key = #{configKey},</if>
            <if test="configValue != null and configValue != ''">config_value = #{configValue},</if>
            <if test="configType != null and configType != ''">config_type = #{configType},</if>
            <if test="defaultValue != null and defaultValue != '' ">default_value = #{defaultValue},</if>
            <if test="valueRange != null and valueRange != '' ">value_range = #{valueRange},</if>
            <if test="isInternal != null and isInternal != '' ">is_internal = #{isInternal},</if>
            <if test="remark != null and remark != ''">remark = #{remark},</if>
            update_time = REPLACE(unix_timestamp(current_timestamp(3)),'.','')
        </set>
        where id = #{id}
    </update>

    <delete id="deleteConfigById" parameterType="String">
        delete
        from system_config
        where id = #{configId}
    </delete>

    <delete id="deleteConfigByIds" parameterType="String">
        delete from system_config where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>