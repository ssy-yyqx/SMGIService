<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.htht.service.platform.portal.system.mapper.SystemLoginLogMapper">

    <resultMap type="cn.htht.service.platform.portal.entity.system.SystemLoginLog" id="SysLoginLogResult">
        <id property="id" column="id"/>
        <result property="loginUserId" column="login_user_id"/>
        <result property="loginUsername" column="login_username"/>
        <result property="operateType" column="operate_type"/>
        <result property="loginIp" column="login_ip"/>
        <result property="browser" column="browser"/>
        <result property="os" column="os"/>
        <result property="msg" column="msg"/>
        <result property="status" column="status"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <insert id="insertLoginLog" parameterType="cn.htht.service.platform.portal.entity.system.SystemLoginLog">
        insert into system_login_log (id, login_username, login_user_id, operate_type, login_ip, browser, os, msg,
                                      status, remark, create_time)
        values (#{id}, #{loginUsername}, #{loginUserId}, #{operateType}, #{loginIp}, #{browser}, #{os}, #{msg},
                #{status}, #{remark}, REPLACE(unix_timestamp(current_timestamp(3)),'.',''))
    </insert>

    <select id="selectLoginLogList" parameterType="cn.htht.service.platform.portal.entity.system.SystemLoginLog"
            resultMap="SysLoginLogResult">
        select id, login_username, login_user_id, operate_type, login_ip, browser, os, msg, status, remark, create_time
        from system_login_log
        <where>
            <if test="ipaddr != null and ipaddr != ''">
                AND login_ip like concat(concat('%',#{loginIp}),'%')
            </if>
            <if test="operateType != null and operateType != ''">
                AND operate_type = #{operateType}
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
            <if test="loginUserName != null and loginUserName != ''">
                AND login_username like concat(concat('%',#{loginUsername}),'%')
            </if>
            <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
                and create_time &gt;= #{params.beginTime}
            </if>
            <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
                and create_time &lt;= #{params.endTime}
            </if>
        </where>
        order by create_time desc
    </select>

    <delete id="deleteLoginLogByIds" parameterType="String">
        delete from system_login_log where id in
        <foreach collection="array" item="infoId" open="(" separator="," close=")">
            #{infoId}
        </foreach>
    </delete>

    <update id="cleanLoginLog">
        truncate table system_login_log
    </update>

</mapper> 